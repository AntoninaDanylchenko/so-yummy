{"version":3,"file":"static/js/703.6585c6a2.chunk.js","mappings":"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","sources":["redux/recipe/selectors.js","components/RecipePage/RecipePageHero/RecipePageHero.styled.js","components/RecipePage/RecipePageHero/RecipePageHero.js","components/RecipePage/RecipeIngredientsList/RecipeIngredientsList.styled.js","components/RecipePage/RecipeIngredientsList/RecipeInngredientsList.js","components/RecipePage/RecipePreparation/RecipePreparation.styled.js","components/RecipePage/RecipePreparation/RecipePreparation.js","pages/RecipePage/RecipePage.js","redux/favorite/selector.js","redux/shoppingList/selectors.js"],"sourcesContent":["export const selectRecipeById = state => state.recipe.recipe.item;\nexport const selectRecipeIsLoading = state => state.recipe.recipe.isLoading;\nexport const selectRecipeError = state => state.recipe.recipe.error;\n\nexport const selectShoppingListError = state => state.recipe.shoppingList.error;","import styled from '@emotion/styled';\n\nimport bgImageMobile from '../../../images/recipe/flat-lay-assortment_mobile.jpg';\nimport bgImageMobile2x from '../../../images/recipe/flat-lay-assortment_mobile@2x.jpg';\nimport bgImageTablet from '../../../images/recipe/flat-lay-assortment_tablet.jpg';\nimport bgImageTablet2x from '../../../images/recipe/flat-lay-assortment_tablet@2x.jpg';\nimport bgImageDesctop from '../../../images/recipe/flat-lay-assortment-vegetables_desktop.jpg';\nimport bgImageDesctop2x from '../../../images/recipe/flat-lay-assortment-vegetables_desktop@2x.jpg';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding-top: 144px;\n  padding-bottom: 90px;\n  /* position: absolute; */\n  /* top: 0; */\n  background-image: url(${bgImageMobile});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n\n  @media screen and (min-device-pixel-ratio: 2),\n    screen and (min-resolution: 192dpi),\n    screen and (min-resolution: 2dppx) {\n    background-image: url(${bgImageMobile2x});\n  }\n\n  @media (${p => p.theme.device.tablet}) {\n    padding-top: 136px;\n    padding-bottom: 32px;\n    background-image: url(${bgImageTablet});\n\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${bgImageTablet2x});\n    }\n  }\n\n  @media (${p => p.theme.device.desktop}) {\n    padding-top: 164px;\n    background-image: url(${bgImageDesctop});\n\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${bgImageDesctop2x});\n    }\n  }\n`;\n\nexport const Title = styled.h1`\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 24px;\n  letter-spacing: -0.02em;\n  font-feature-settings: 'liga' off;\n  color: #8baa36;\n  margin: 0 auto 24px auto;\n\n  @media (${p => p.theme.device.tablet}) {\n    font-size: 44px;\n    line-height: 44px;\n  }\n`;\n\nexport const Description = styled.p`\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: -0.02em;\n  font-feature-settings: 'liga' off;\n  color: #22252a;\n  margin: 0 auto 24px auto;\n\n  @media (${p => p.theme.device.tablet}) {\n    font-size: 18px;\n    line-height: 24px;\n  }\n\n  @media (${p => p.theme.device.desktop}) {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const Button = styled.button`\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 15px;\n  color: #23262a;\n\n  background-color: transparent;\n  border-radius: 24px 44px;\n  border: 2px solid #8baa36;\n\n  max-width: 150px;\n  padding: 10px 18px;\n  margin: 0 auto 42px auto;\n\n  @media (${p => p.theme.device.tablet}) {\n    font-size: 16px;\n    line-height: 24px;\n\n    max-width: 270px;\n    padding: 18px 44px;\n    margin-bottom: 60px;\n  }\n\n  @media (${p => p.theme.device.desktop}) {\n    margin-bottom: 48px;\n  }\n  :hover,\n  :focus {\n    color: #fafafa;\n    background: #8baa36;\n    transition: all 0.5s ease-out;\n  }\n`;\n\nexport const Time = styled.p`\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 10px;\n  line-height: 14px;\n  color: #23262a;\n  margin: 0 auto;\n\n  @media (${p => p.theme.device.tablet}) {\n    font-size: 14px;\n    line-height: 20px;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  addFavoriteOp,\n  deleteFavoriteOp,\n  getFavoriteOp,\n} from 'redux/favorite/operation';\nimport { getFavorite } from 'redux/favorite/selector';\n\nimport {\n  Button,\n  Container,\n  Description,\n  Time,\n  Title,\n} from './RecipePageHero.styled';\n\nexport const RecipePageHero = ({ recipe, title, description, time }) => {\n  const dispatch = useDispatch();\n  const { items: favorite } = useSelector(getFavorite);\n\n  useEffect(() => {\n    dispatch(getFavoriteOp());\n  }, [dispatch]);\n\n  const handleAddRecipeToFavorite = () => {\n    dispatch(addFavoriteOp(recipe._id));\n  };\n\n  const handleRemoveRecipeFromFavorite = () => {\n    const recipeToRemove = favorite.find(fav => fav._id === recipe._id);\n    dispatch(deleteFavoriteOp(recipeToRemove._id));\n  };\n\n  return (\n    <>\n      <Container>\n        <Title>{title}</Title>\n        <Description>{description}</Description>\n\n        {favorite?.some(fav => fav._id === recipe._id) ? (\n          <Button type=\"button\" onClick={handleRemoveRecipeFromFavorite}>\n            Remove from favorite\n          </Button>\n        ) : (\n          <Button type=\"button\" onClick={handleAddRecipeToFavorite}>\n            Add to favorite\n          </Button>\n        )}\n\n        <Time>{time} min</Time>\n      </Container>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 30px 16px 50px 16px;\n  @media screen and (min-width: 768px) {\n    padding: 50px 32px 96px 32px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 50px 100px 100px 100px;\n  }\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 12px 14px;\n  margin-bottom: 24px;\n  background: #8baa36;\n  border-radius: 8px;\n  @media screen and (min-width: 768px) {\n    padding: 21px 32px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 21px 40px;\n    margin-bottom: 40px;\n  }\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  gap: 18px;\n  @media screen and (min-width: 768px) {\n    gap: 58px;\n  }\n  @media screen and (min-width: 1200px) {\n    gap: 109px;\n  }\n`;\n\nexport const Desc = styled.p`\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 10px;\n  line-height: 15px;\n  letter-spacing: 0.03em;\n  color: #fafafa;\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 27px;\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  @media screen and (min-width: 768px) {\n    gap: 24px;\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 14px 29px 14px 14px;\n  background: #ebf3d4;\n  border-radius: 8px;\n  @media screen and (min-width: 768px) {\n    padding: 33px 58px 33px 40px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 27px 70px 27px 58px;\n  }\n`;\n\nexport const Wrapper1 = styled.div`\n  display: flex;\n  gap: 12px;\n  @media screen and (min-width: 768px) {\n    gap: 40px;\n  }\n  @media screen and (min-width: 1200px) {\n    gap: 66px;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 57px;\n  height: 57px;\n  @media screen and (min-width: 768px) {\n    width: 112px;\n    height: 112px;\n  }\n  @media screen and (min-width: 1200px) {\n    width: 128px;\n    height: 128px;\n  }\n`;\n\nexport const Title = styled.p`\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 14px;\n  letter-spacing: -0.24px;\n  color: #3e4462;\n  margin: auto 0;\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n    line-height: 24px;\n  }\n`;\n\nexport const Wrapper2 = styled.div`\n  display: flex;\n  gap: 26px;\n  margin-right: 0;\n  @media screen and (min-width: 768px) {\n    gap: 68px;\n  }\n  @media screen and (min-width: 1200px) {\n    gap: 116px;\n  }\n`;\n\nexport const Amount = styled.p`\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 10px;\n  line-height: 15px;\n  color: #fafafa;\n  padding: 4px;\n  margin: auto 0;\n  background: #8baa36;\n  border-radius: 4px;\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 27px;\n    padding: 4px 8px;\n  }\n`;\n\nexport const Checkbox = styled.input`\n  width: 18px;\n  @media screen and (min-width: 768px) {\n    width: 35px;\n  }\n`;","import { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  Container,\n  Box,\n  TitleWrapper,\n  Desc,\n  List,\n  Item,\n  Wrapper1,\n  Image,\n  Title,\n  Wrapper2,\n  Amount,\n  Checkbox,\n} from './RecipeIngredientsList.styled';\n\nimport {\n  addIngredientToShoppingList,\n  removeIngredientFromShoppingList,\n} from 'redux/shoppingList/operations';\nimport { selectShoppingList } from 'redux/shoppingList/selectors';\n\nexport const RecipeInngredientsList = ({ ingredients }) => {\n  const dispatch = useDispatch();\n  const products = useSelector(selectShoppingList);\n\n  const handleOnChange = (productId, measure) => {\n\n    const ingredient = { productId, measure };\n    console.log(\"ingredient:\", ingredient);\n    \n    const isIngredientsInList = products.some(\n      p => p.productId === productId && p.measure.some(m => m === measure)\n    );\n\n    if (isIngredientsInList) {\n      dispatch(removeIngredientFromShoppingList(ingredient));\n    } else {\n      dispatch(addIngredientToShoppingList(ingredient));\n    }\n  };\n\n  return (\n    <Container>\n      <Box>\n        <Desc>Ingredients</Desc>\n        <TitleWrapper>\n          <Desc>Number</Desc>\n          <Desc>Add to list</Desc>\n        </TitleWrapper>\n      </Box>\n      <List>\n        {ingredients.map(ingredient => (\n          <Item key={ingredient._id}>\n            <Wrapper1>\n              <Image\n                src={ingredient.thb}\n                alt={ingredient.ttl}\n                loading=\"lazy\"\n              ></Image>\n              <Title>{ingredient.ttl}</Title>\n            </Wrapper1>\n\n            <Wrapper2>\n              <Amount>{ingredient.measure}</Amount>\n\n              <Checkbox\n                type=\"checkbox\"\n                checked={products.some(p => p.productId === ingredient._id)}\n                onChange={() =>\n                  handleOnChange(ingredient._id, ingredient.measure)\n                }\n              ></Checkbox>\n            </Wrapper2>\n          </Item>\n        ))}\n      </List>\n    </Container>\n  );\n};","import styled from '@emotion/styled';\n\nexport const Title = styled.h2``;\n\nexport const Container = styled.div`\n  display: flex;\n`;\n\nexport const List = styled.ul``;\n\nexport const Item = styled.li``;\n\nexport const Amount = styled.span``;\n\nexport const Desc = styled.p``;\n\nexport const Image = styled.img``;\n","import {\n  Container,\n  Image,\n  Item,\n  List,\n  Title,\n} from './RecipePreparation.styled';\n\nexport const RecipePreparation = ({ title, instructions, thumb }) => {\n  const instruction = instructions\n    .split('.')\n    .filter(item => Number.isNaN(Number(parseInt(item))))\n    .filter(str => str.trim() !== '');\n\n  return (\n    <>\n      <Title>Recipe preparation of {title}</Title>\n      <Container>\n        <List>\n          {instruction.map((item, idx) => (\n            <Item key={idx}>\n              <span>{idx + 1}</span>\n              <p>{item.trim()}</p>\n            </Item>\n          ))}\n        </List>\n        <Image src={thumb} alt={title} />\n      </Container>\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { getRecipeById } from 'redux/recipe/operations';\nimport { selectRecipeById } from 'redux/recipe/selectors';\n\nimport { RecipePageHero } from 'components/RecipePage/RecipePageHero/RecipePageHero';\nimport { RecipeInngredientsList } from 'components/RecipePage/RecipeIngredientsList/RecipeInngredientsList';\nimport { RecipePreparation } from 'components/RecipePage/RecipePreparation/RecipePreparation';\n\nconst RecipePage = () => {\n  const dispatch = useDispatch();\n  const { recipeId } = useParams();\n  const recipe = useSelector(selectRecipeById);\n\n  const { title, description, time, instructions, thumb, ingredients } =\n    recipe?.data?.recipe || {};\n\n  useEffect(() => {\n    dispatch(getRecipeById(recipeId));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [recipeId]);\n\n  return (\n    <>\n      {recipe !== null && (\n        <>\n          <RecipePageHero\n            recipe={recipe.data.recipe}\n            title={title}\n            description={description}\n            time={time}\n          />\n          <RecipeInngredientsList ingredients={ingredients} />\n          <RecipePreparation\n            instructions={instructions}\n            title={title}\n            thumb={thumb}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default RecipePage;\n","export const getFavorite = state => state.favorite;\n","export const selectShoppingList = state => state.shoppingList.items;\n"],"names":["selectRecipeById","state","recipe","item","Container","styled","bgImageMobile","bgImageMobile2x","p","theme","device","tablet","bgImageTablet","bgImageTablet2x","desktop","bgImageDesctop","bgImageDesctop2x","Title","Description","Button","Time","RecipePageHero","title","description","time","dispatch","useDispatch","favorite","useSelector","getFavorite","items","useEffect","getFavoriteOp","some","fav","_id","type","onClick","recipeToRemove","find","deleteFavoriteOp","addFavoriteOp","Box","TitleWrapper","Desc","List","Item","Wrapper1","Image","Wrapper2","Amount","Checkbox","RecipeInngredientsList","ingredients","products","selectShoppingList","map","ingredient","src","thb","alt","ttl","loading","measure","checked","productId","onChange","console","log","isIngredientsInList","m","removeIngredientFromShoppingList","addIngredientToShoppingList","handleOnChange","RecipePreparation","instructions","thumb","instruction","split","filter","Number","isNaN","parseInt","str","trim","idx","recipeId","useParams","data","getRecipeById","shoppingList"],"sourceRoot":""}