{"version":3,"file":"static/js/989.4b9bc10e.chunk.js","mappings":"kMAGaA,EAAcC,EAAAA,EAAAA,IAAH,gDAkBXC,GAfYD,EAAAA,EAAAA,IAAH,yVAeDA,EAAAA,EAAAA,GAAH,mf,IAwBQA,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,yIAQIA,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,wNAYFA,EAAAA,EAAAA,OAAH,sB,yDCzDbI,GAASC,EAAAA,EAAAA,MAASC,MAAM,CAC5BC,OAAOC,EAAAA,EAAAA,MAASD,QAAQE,SAAS,qBACjCC,UAAUF,EAAAA,EAAAA,MAASC,SAAS,0BAGjBE,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbT,MAAO,GACPG,SAAU,IAEZO,iBAAkBb,EAClBc,SAAU,SAACC,EAAQC,GACjBC,QAAQC,IAAIH,GAEZP,GAASW,EAAAA,EAAAA,IAAMJ,IAEfC,EAAcI,WACf,IAGH,OACE,0BACE,kBAAMN,SAAUJ,EAAOW,aAAvB,WACE,SAACC,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,MAAOjB,EAAOK,OAAOZ,MACrByB,SAAUlB,EAAOmB,aACjBC,MAAOpB,EAAOqB,QAAQ5B,OAAS6B,QAAQtB,EAAOuB,OAAO9B,OACrD+B,WAAYxB,EAAOqB,QAAQ5B,OAASO,EAAOuB,OAAO9B,SAGpD,SAACmB,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,WACHC,KAAK,WACLC,MAAM,WACNS,KAAK,WACLR,MAAOjB,EAAOK,OAAOT,SACrBsB,SAAUlB,EAAOmB,aACjBC,MAAOpB,EAAOqB,QAAQzB,UAAY0B,QAAQtB,EAAOuB,OAAO3B,UACxD4B,WAAYxB,EAAOqB,QAAQzB,UAAYI,EAAOuB,OAAO3B,YAEvD,SAAC,IAAD,CAAQ8B,MAAM,UAAUC,QAAQ,YAAYd,WAAS,EAACY,KAAK,SAA3D,yBAMP,EC7CD,EAZmB,WACjB,OACE,+BACE,UAACxC,EAAD,YACE,SAACE,EAAD,uBAGA,SAACU,EAAD,QAIP,C","sources":["pages/SigninPage/SigninPage.styled.js","components/LoginForm/LoginForm.js","pages/SigninPage/SigninPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, Form } from 'formik';\n\nexport const WrapperForm = styled.div`\n  background: #fafafa;\n`;\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex-wrap: wrap;\n  padding: 275px 0;\n  text-align: center;\n  margin: 0 auto;\n  @media screen and (min-width: 450px) and (max-width: 1200px) {\n    padding: 342px 0;\n  }\n  @media screen and (min-width: 1200px) {\n    padding-top: 214px 0;\n  }\n`;\nexport const Title = styled.h2`\n  padding-top: 32px;\n  margin-bottom: 14px;\n\n  color: rgba(250, 250, 250, 1);\n  font-weight: 600;\n  font-size: 24px;\n  letter-spacing: 0.06em;\n  line-height: 1;\n  text-align: center;\n  font-family: inherit;\n\n  @media screen and (min-width: 768) and (max-width: 1199px) {\n    font-size: 24px;\n    line-height: 1.62;\n    font-weight: 600;\n  }\n  @media screen and (min-width: 1200px) {\n    font-size: 24px;\n    line-height: 1.36;\n    font-weight: 600;\n  }\n`;\n\nexport const FormFormik = styled(Form)`\n  display: grid;\n  grid-template-columns: 1fr;\n  row-gap: 12px;\n  margin-left: 20px;\n  margin-right: 20px;\n`;\n\nexport const InputFormik = styled(Field)`\n  font-size: 14px;\n  line-height: calc(21 / 14) px;\n  max-width: 700px;\n\n  padding-left: 40px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n\n  background: #2a2c36;\n  color: #fafafa;\n`;\nexport const Button = styled.button``;\n","// import React from 'react';\nimport { useFormik } from 'formik';\nimport { object, string } from 'yup';\nimport { Button, TextField } from '@mui/material';\n\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operation';\n\nconst schema = object().shape({\n  email: string().email().required('Pease enter email'),\n  password: string().required('Pease enter password'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: schema,\n    onSubmit: (values, formikHelpers) => {\n      console.log(values);\n\n      dispatch(logIn(values));\n\n      formikHelpers.resetForm();\n    },\n  });\n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Sign In\n        </Button>\n      </form>\n    </div>\n  );\n};\n","// import { Helmet } from 'react-helmet-async';\n\nimport { Title, WrapperForm } from './SigninPage.styled';\nimport { LoginForm } from '../../components/LoginForm/LoginForm';\n\nconst SigninPage = () => {\n  return (\n    <>\n      <WrapperForm>\n        <Title>Sign In</Title>\n        {/* <Helmet>\n        </Helmet> */}\n        <LoginForm />\n      </WrapperForm>\n    </>\n  );\n};\nexport default SigninPage;\n"],"names":["WrapperForm","styled","Title","Form","Field","schema","object","shape","email","string","required","password","LoginForm","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","formikHelpers","console","log","logIn","resetForm","handleSubmit","TextField","fullWidth","id","name","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","color","variant"],"sourceRoot":""}