{"version":3,"file":"static/js/948.0ce60e18.chunk.js","mappings":"kPASMA,GAASC,EAAAA,EAAAA,MAASC,MAAM,CAC5BC,UAAUC,EAAAA,EAAAA,MACPC,IAAI,EAAG,kCACPC,IAAI,GAAI,mCACRC,SAAS,oBACZC,OAAOJ,EAAAA,EAAAA,MAASI,MAAM,yBAAyBD,SAAS,qBACxDE,UAAUL,EAAAA,EAAAA,MACPC,IAAI,EAAG,uCACPC,IAAI,IAAK,yCACTI,QAAQ,mCAAoC,sBAC5CH,SAAS,0BAGDI,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbb,SAAU,GACVK,MAAO,GACPC,SAAU,IAEZQ,iBAAkBjB,EAClBkB,SAAU,SAACC,EAAQC,GACjBC,QAAQC,IAAIH,GACZP,GAASW,EAAAA,EAAAA,IAASJ,IAClBC,EAAcI,WACf,IAOH,OACE,0BACE,kBAAMN,SAAUJ,EAAOW,aAAvB,WACE,SAACC,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,OACHC,KAAK,WACLC,MAAM,OACNC,MAAOjB,EAAOK,OAAOU,KACrBG,SAAUlB,EAAOmB,aACjBC,MAAOpB,EAAOqB,QAAQN,MAAQO,QAAQtB,EAAOuB,OAAOR,MACpDS,WAAYxB,EAAOqB,QAAQN,MAAQf,EAAOuB,OAAOR,QAGnD,SAACH,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,MAAOjB,EAAOK,OAAOX,MACrBwB,SAAUlB,EAAOmB,aACjBC,MAAOpB,EAAOqB,QAAQ3B,OAAS4B,QAAQtB,EAAOuB,OAAO7B,OACrD8B,WAAYxB,EAAOqB,QAAQ3B,OAASM,EAAOuB,OAAO7B,SAEpD,SAACkB,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,WACHC,KAAK,WACLC,MAAM,WACNS,KAAK,WACLR,MAAOjB,EAAOK,OAAOV,SACrBuB,SAAUlB,EAAOmB,aACjBC,MAAOpB,EAAOqB,QAAQ1B,UAAY2B,QAAQtB,EAAOuB,OAAO5B,UACxD6B,WAAYxB,EAAOqB,QAAQ1B,UAAYK,EAAOuB,OAAO5B,YAEvD,SAAC+B,EAAA,EAAD,CAAQC,MAAM,UAAUC,QAAQ,YAAYf,WAAS,EAACY,KAAK,SAA3D,yBAMP,E,kBCjFYI,EAAcC,EAAAA,EAAAA,IAAH,gDAkBXC,GAfYD,EAAAA,EAAAA,IAAH,yVAeDA,EAAAA,EAAAA,GAAH,mfCFlB,ID0B0BA,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,yIAQIA,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,wNAYFA,EAAAA,EAAAA,OAAH,sBC3DE,WACnB,OACE,+BACE,UAACD,EAAD,YACE,SAACE,EAAD,4BAGA,SAAClC,EAAD,QAKP,E","sources":["components/RegisterForm/RegisterForm.js","pages/RegisterPage/RegisterPage.styled.js","pages/RegisterPage/RegisterPage.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { useFormik } from 'formik';\nimport { object, string } from 'yup';\nimport { Button, TextField } from '@mui/material';\n\nimport { register } from 'redux/auth/operation';\n\nconst schema = object().shape({\n  username: string()\n    .min(2, 'Must be more than 2 characters')\n    .max(32, 'Must be less than 32 characters')\n    .required('Pease enter name'),\n  email: string().email('Invalid email address').required('Pease enter email'),\n  password: string()\n    .min(6, 'Password should be min 6 characters')\n    .max(128, 'Password should be max 128 characters')\n    .matches(/(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]/, 'Password too light')\n    .required('Pease enter password'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: schema,\n    onSubmit: (values, formikHelpers) => {\n      console.log(values);\n      dispatch(register(values));\n      formikHelpers.resetForm();\n    },\n\n    //       values => {\n    //   alert(JSON.stringify(values, null, 2));\n    // },\n  });\n\n  return (\n    <div>\n      <form onSubmit={formik.handleSubmit}>\n        <TextField\n          fullWidth\n          id=\"name\"\n          name=\"username\"\n          label=\"Name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n          Sign up\n        </Button>\n      </form>\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Field, Form } from 'formik';\n\nexport const WrapperForm = styled.div`\n  background: #fafafa;\n`;\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex-wrap: wrap;\n  padding: 275px 0;\n  text-align: center;\n  margin: 0 auto;\n  @media screen and (min-width: 450px) and (max-width: 1200px) {\n    padding: 342px 0;\n  }\n  @media screen and (min-width: 1200px) {\n    padding-top: 214px 0;\n  }\n`;\nexport const Title = styled.h2`\n  padding-top: 32px;\n  margin-bottom: 14px;\n\n  color: rgba(250, 250, 250, 1);\n  font-weight: 600;\n  font-size: 24px;\n  letter-spacing: 0.06em;\n  line-height: 1;\n  text-align: center;\n  font-family: inherit;\n\n  @media screen and (min-width: 768) and (max-width: 1199px) {\n    font-size: 24px;\n    line-height: 1.62;\n    font-weight: 600;\n  }\n  @media screen and (min-width: 1200px) {\n    font-size: 24px;\n    line-height: 1.36;\n    font-weight: 600;\n  }\n`;\n\nexport const FormFormik = styled(Form)`\n  display: grid;\n  grid-template-columns: 1fr;\n  row-gap: 12px;\n  margin-left: 20px;\n  margin-right: 20px;\n`;\n\nexport const InputFormik = styled(Field)`\n  font-size: 14px;\n  line-height: calc(21 / 14) px;\n  max-width: 700px;\n\n  padding-left: 40px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n\n  background: #2a2c36;\n  color: #fafafa;\n`;\nexport const Button = styled.button``;\n","// import { Link } from 'react-router-dom';\n// import { Helmet } from 'react-helmet-async';\n\nimport { RegisterForm } from '../../components/RegisterForm/RegisterForm';\nimport { Title, WrapperForm } from './RegisterPage.styled';\n\nconst RegisterPage = () => {\n  return (\n    <>\n      <WrapperForm>\n        <Title>Registration</Title>\n        {/* <Helmet>\n        </Helmet> */}\n        <RegisterForm />\n      </WrapperForm>\n      {/* <Link to=\"signin\">Sign In</Link> */}\n    </>\n  );\n};\nexport default RegisterPage;\n"],"names":["schema","object","shape","username","string","min","max","required","email","password","matches","RegisterForm","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","values","formikHelpers","console","log","register","resetForm","handleSubmit","TextField","fullWidth","id","name","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","color","variant","WrapperForm","styled","Title","Form","Field"],"sourceRoot":""}