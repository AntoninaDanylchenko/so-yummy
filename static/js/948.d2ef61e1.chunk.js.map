{"version":3,"file":"static/js/948.d2ef61e1.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.js","pages/RegisterPage/RegisterPage.styled.js","pages/RegisterPage/RegisterPage.js"],"sourcesContent":["import React from // { useState }\n'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\n\nimport { TextField as MuiTextField } from 'formik-mui';\nimport { object, string } from 'yup';\nimport { InputAdornment, Button, LinearProgress } from '@mui/material';\n\nimport { styled } from '@mui/material/styles';\n\nimport PermIdentityIcon from '@mui/icons-material/PermIdentity';\nimport MailOutlineIcon from '@mui/icons-material/MailOutline';\nimport LockOpenIcon from '@mui/icons-material/LockOpen';\n// import WorkOutlineIcon from '@mui/icons-material/WorkOutline';\nimport CheckCircleSharpIcon from '@mui/icons-material/CheckCircleSharp';\nimport CancelSharpIcon from '@mui/icons-material/CancelSharp';\n// import ErrorRoundedIcon from '@mui/icons-material/ErrorRounded';\n\nimport { register } from 'redux/auth/operation';\n\n\nconst schema = object().shape({\n  username: string()\n    .min(1)\n    .max(16, 'Must be less than 16 characters')\n    .required('Please enter name')\n    .trim(),\n  email: string()\n    .email('Invalid email address')\n    .required('Please enter email')\n    .trim(),\n  password: string()\n    .min(6, 'Password should be min 6 characters')\n    .max(16, 'Password should be max 16 characters')\n    .matches(\n      /(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]/,\n      'Password must exist (A-a, 1-9)'\n    )\n    .required('Please enter password')\n    .trim(),\n});\n\n// const TextField = styled(MuiTextField)(({ theme, errors, touched, values }) => {\n//   let borderStyle;\n//   if (touched?.username && errors?.username) {\n//     borderStyle = '2px solid #E74A3B';\n//   } else if (touched?.username) {\n//     borderStyle = '5px solid #3CBC81';\n//   } else {\n//     borderStyle = '2px solid #FAFAFA';\n//   }\n//   // inputSuccess\n//   return {\n//     //  \" & MuiOutlinedInput-root\"\n\n//     '& MuiOutlinedInput-root':\n//       // MuiOutlinedInput-root\n//       // & MuiInputBase-root,\n//       // & MuiInputBase-colorPrimary,\n//       // & MuiInputBase-fullWidth,\n//       // & MuiInputBase - formControl\n\n//       {\n//         fontFamily: 'Poppins',\n//         fontSize: 14,\n//         lineHeight: 1.39,\n//         marginBottom: '12px',\n//         opacity: 0.8,\n//         flex: 'none',\n//         order: 2,\n//         flexGrow: 0,\n//         borderRadius: '6px',\n//         сolor: '#fafafa',\n//         border: borderStyle,\n//         '&:hover': {\n//           borderColor: '2px solid #FAFAFA',\n//         },\n//         '&.Mui-focused': {\n//           borderColor: '2px solid #FAFAFA',\n//         },\n//         // borderColor: ${p => p.theme.inputSuccess},\n//       },\n//   };\n// });\n//  white ? '1px solid #FAFAFA'\n// error    ? '1px solid #E74A3B'\n// green: '1px solid #3CBC81',\n// const ButtonMui = styled(Button)({height: 45px;})\nconst TextField = styled(MuiTextField)(\n  ({ theme, errors, touched, values }) => ({\n    '& .MuiInputBase-root': {\n      fontFamily: 'Poppins',\n      fontSize: '14px',\n      height: '45px',\n\n      marginBottom: '12px',\n      py: '12px',\n      opacity: 0.8,\n      flex: 'none',\n      order: 2,\n\n      color: '#fafafa',\n      flexGrow: 0,\n      borderRadius: '6px',\n      border: '1px solid #FAFAFA',\n      '&:hover': {\n        border: '2px solid #FAFAFA',\n      },\n      '&.Mui-focused': {\n        border: '2px solid #FAFAFA',\n      },\n      '& fieldset': { border: 'none' },\n      '@media (min-width: 768px)': {\n        height: '59px',\n        marginBottom: '24px',\n        fontSize: '18px',\n      },\n    },\n  })\n);\nconst initialValues = {\n  username: '',\n  email: '',\n  password: '',\n};\n\nexport const RegisterForm = () => {\n  // const [passwordWarn, setPasswordWarn] = useState('');\n  // const [showWarning, setShowWarning] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleOnSubmit = (values, { setSubmitting }) => {\n    setSubmitting(false);\n    dispatch(register(values));\n  };\n\n  // e.preventDefault();\n  // console.log(showWarning);\n  // console.log(passwordWarn);\n  // const handleChange = e => {\n  //   setPasswordWarn(e.target.value);\n  //   if (passwordWarn.length > 5 && passwordWarn.length < 17) {\n  //     return setShowWarning(true);\n  //   }\n  //   return setShowWarning(false);\n  // };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleOnSubmit}\n    >\n      {({ values, submitForm, isSubmitting, touched, errors }) => (\n        <Form autoComplete=\"off\">\n          <Field\n            component={TextField}\n            fullWidth\n            // id=\"outlined\"\n            name=\"username\"\n            type=\"text\"\n            placeholder=\"Name\"\n            multiline\n            // border={\n            //   touched.username &&\n            //   'rgba(245, 146, 86, 0.5)' &&\n            //   (errors.username\n            //     ? '1px solid rgba(226, 0, 26, 1)'\n            //     : `1px solid rgba(60, 188, 129, 1)`)\n            // }\n            InputProps={{\n              sx: {\n                // borderColor:\n                //   errors.username && touched.username\n                //     ? '2px solid #E74A3B'\n                //     : touched.username\n                //     ? '2px solid #3CBC81'\n                //     : '2px solid #fafafa',         =================== працює на іконках\n                //  {errors.username && touched.username} ?? border:'5px solid #E74A3B'\n                // border:\n                //   errors?.username && touched?.username\n                //     ? '2px solid #E74A3B'\n                //     : '2px solid #3CBC81',\n              },\n              // sx: {\n              //   border:\n              //     errors.username && touched.username\n              //       ? 'opx solid #E74A3'\n              //       : touched.username\n              //       ? '2px solid #3CBC81'\n              //       : undefined,\n              // },\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <PermIdentityIcon\n                    sx={{\n                      fontSize: 20,\n                      color:\n                        errors.username && touched.username\n                          ? '#E74A3B'\n                          : touched.username\n                          ? '#3CBC81'\n                          : '#fafafa',\n                      opacity: 0.8,\n                      flex: 'none',\n                      order: 1,\n                      flexGrow: 0,\n                      '@media (min-width: 768px)': {\n                        fontSize: 28,\n                      },\n                    }}\n                  />\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <InputAdornment position=\"end\" style={{ outline: 'none' }}>\n                  {errors.username && touched.username && (\n                    <CancelSharpIcon\n                      sx={{\n                        color: '#E74A3B',\n                        fontSize: 18,\n                        '@media (min-width: 768px)': {\n                          fontSize: 24,\n                        },\n                      }}\n                    ></CancelSharpIcon>\n                  )}\n                  {!errors.username && touched.username && (\n                    <CheckCircleSharpIcon\n                      sx={{\n                        color: '#3CBC81',\n                        fontSize: 18,\n                        '@media (min-width: 768px)': {\n                          fontSize: 24,\n                        },\n                      }}\n                    ></CheckCircleSharpIcon>\n                  )}\n                </InputAdornment>\n              ),\n            }}\n          />\n\n          <Field\n            component={TextField}\n            fullWidth\n            // id=\"outlined\"\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            multiline\n            InputProps={{\n              sx: {\n                // {errors.username && touched.username ?? border:'5px solid #E74A3B'}\n                border:\n                  (!errors?.username && touched?.username) &\n                  '2px solid #3CBC81',\n              },\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <MailOutlineIcon\n                    sx={{\n                      fontSize: 20,\n                      color:\n                        errors.email && touched.email\n                          ? '#E74A3B'\n                          : touched.email\n                          ? '#3CBC81'\n                          : '#fafafa',\n                      opacity: 0.8,\n                      flex: 'none',\n                      order: 1,\n                      flexGrow: 0,\n                      '@media (min-width: 768px)': {\n                        fontSize: 28,\n                      },\n                    }}\n                  />\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <InputAdornment position=\"end\" style={{ outline: 'none' }}>\n                  {errors.email && touched.email && (\n                    <CancelSharpIcon\n                      sx={{\n                        color: '#E74A3B',\n                        fontSize: 18,\n                        '@media (min-width: 768px)': {\n                          fontSize: 24,\n                        },\n                      }}\n                      fontSize=\"default\"\n                    ></CancelSharpIcon>\n                  )}\n                  {!errors.email && touched.email && (\n                    <CheckCircleSharpIcon\n                      sx={{\n                        color: '#3CBC81',\n                        fontSize: 18,\n                        '@media (min-width: 768px)': {\n                          fontSize: 24,\n                        },\n                      }}\n                      fontSize=\"default\"\n                    ></CheckCircleSharpIcon>\n                  )}\n                </InputAdornment>\n              ),\n            }}\n            // value={values.email}\n            // onChange={handleChange}\n            // error={touched.email && Boolean(errors.email)}\n            // helperText={touched.email && errors.email}\n          />\n          <Field\n            component={TextField}\n            fullWidth\n            // id=\"outlined-password-input\"\n            name=\"password\"\n            type=\"password\"\n            // value={passwordWarn}\n            // onChange={handleChange}\n            placeholder=\"Password\"\n            multiline\n            autoComplete=\"off\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <LockOpenIcon\n                    sx={{\n                      fontSize: 20,\n                      color:\n                        errors.password && touched.password\n                          ? '#E74A3B'\n                          : touched.password\n                          ? '#3CBC81'\n                          : '#fafafa',\n                      opacity: 0.8,\n                      flex: 'none',\n                      order: 1,\n                      flexGrow: 0,\n                      '@media (min-width: 768px)': {\n                        fontSize: 28,\n                      },\n                    }}\n                  />\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <InputAdornment position=\"end\" style={{ outline: 'none' }}>\n                  {errors.password && touched.password && (\n                    <CancelSharpIcon\n                      sx={{\n                        color: '#E74A3B',\n                        fontSize: 18,\n                        '@media (min-width: 768px)': {\n                          fontSize: 24,\n                        },\n                      }}\n                    ></CancelSharpIcon>\n                  )}\n                  {!errors.password && touched.password && (\n                    <CheckCircleSharpIcon\n                      sx={{\n                        color: '#3CBC81',\n                        fontSize: 18,\n                        '@media (min-width: 768px)': {\n                          fontSize: 24,\n                        },\n                      }}\n                    ></CheckCircleSharpIcon>\n                  )}\n                  {/* {showWarning && (\n                    <ErrorRoundedIcon\n                      sx={{\n                        color: '#F6C23E',\n                        fontSize: 18,\n                        '@media (min-width: 768px)': {\n                          fontSize: 24,\n                        },\n                      }}\n                    ></ErrorRoundedIcon>\n                  )} */}\n                </InputAdornment>\n              ),\n            }}\n            // values={passwordWarn}\n            // onChange={handleChange}\n            // () => {\n            //   setPasswordWarn(values.password);\n            //   if (passwordWarn.length > 5 && passwordWarn.length > 0) {\n            //     return setShowWarning(true);\n            //   }\n            //   return setShowWarning(false);\n            // }\n\n            // error={touched.password && Boolean(errors.password)}\n            // helperText={touched.password && errors.password}\n          />\n          {isSubmitting && <LinearProgress />}\n          <br />\n          <Button\n            variant=\"outlined\"\n            sx={{\n              fontFamily: 'Poppins',\n              width: '100%',\n              height: '45px',\n              mt: '16px',\n\n              textTransform: 'none',\n              fontSize: 16,\n              // lineHeight: 18,\n\n              backgroundColor: '#8BAA36',\n              color: '#FAFAFA',\n              borderRadius: '6px',\n              flex: 'none',\n              order: 0,\n              flexGrow: 0,\n              [`&:hover`]: {\n                backgroundColor: '#8BAA36',\n                color: '#FAFAFA',\n              },\n\n              '@media (min-width: 768px)': {\n                width: '100%',\n                height: '59px',\n                borderRadius: '6px',\n                backgroundColor: ' #8BAA36;',\n                mt: '26px',\n              },\n            }}\n            // variant=\"contained\"\n            // disabled={isSubmitting}\n            fullWidth\n            type=\"submit\"\n            onClick={submitForm}\n          >\n            Sign up\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\n// const ButtonFormik = styled(Button){\n//   backgroundColor: ${p=>p.theme.primary.text},\n// };\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n// import { Field, Form } from 'formik';\n\nimport bgImgRectangleMobile from '../../images/form/rectangle_mobile.png';\nimport bgImgRectangleMobile2x from '../../images/form/rectangle_mobile@2x.png';\nimport bgImgRectangleTablet from '../../images/form/rectangle_tablet.png';\nimport bgImgRectangleTablet2x from '../../images/form/rectangle_tablet@2x.png';\nimport bgImgRectangleDesktop from '../../images/form/rectangle_desktop.png';\nimport bgImgRectangleDesktop2x from '../../images/form/rectangle_desktop@2x.png';\n\nimport imgPanaMobile from '../../images/form/food-pana_mobile.png';\nimport imgPanaMobile2x from '../../images/form/food-pana_mobile@2x.png';\nimport imgPanaTablet from '../../images/form/food-pana_tablet.png';\nimport imgPanaTablet2x from '../../images/form/food-pana_tablet@2x.png';\nimport imgPanaDesktop from '../../images/form/food-pana_desktop.png';\nimport imgPanaDesktop2x from '../../images/form/food-pana_desktop@2x.png';\n\n// export const Probnik111111 = styled.div`\n//   @media (${p => p.theme.device.tablet}) {\n//   }\n//   @media (${p => p.theme.device.desktop}) {\n//   }\n// `;\nexport const Box = styled.section`\n  min-width: 100vw;\n  min-height: 100vh;\n\n  background-image: url(${imgPanaMobile}), url(${bgImgRectangleMobile});\n  background-repeat: no-repeat;\n  background-size: 285px, cover;\n  /* background-size: calc(100vw - 180px), cover; */\n  background-position: center top 86px, center top 322px;\n\n  @media screen and (min-device-pixel-ratio: 2),\n    screen and (min-resolution: 192dpi),\n    screen and (min-resolution: 2dppx) {\n    background-image: url(${imgPanaMobile2x}), url(${bgImgRectangleMobile2x});\n  }\n\n  @media (${p => p.theme.device.tablet}) {\n    background-image: url(${imgPanaTablet}), url(${bgImgRectangleTablet});\n    background-size: 409px, cover;\n    background-position: center top 96px, center top 322px;\n\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${imgPanaTablet2x}), url(${bgImgRectangleTablet2x});\n    }\n  }\n\n  @media (${p => p.theme.device.desktop}) {\n    background-image: url(${imgPanaDesktop}), url(${bgImgRectangleDesktop});\n    background-size: 532px, cover;\n    background-position: left 113px top 115px, center top 364px;\n\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${imgPanaDesktop2x}),\n        url(${bgImgRectangleDesktop2x});\n    }\n  }\n`;\n\nexport const WrapperForm = styled.div`\n  position: absolute;\n  max-width: 335px;\n  margin-top: 305px;\n  margin-left: auto;\n  margin-right: auto;\n  left: 0;\n  right: 0;\n  text-align: center;\n\n  padding: 32px 28px 40px;\n\n  background: #2a2c36;\n  box-shadow: 0px 4px 48px rgba(0, 0, 0, 0.1);\n  border-radius: 30px;\n\n  @media (${p => p.theme.device.tablet}) {\n    max-width: 500px;\n    margin-top: 444px;\n    padding: 44px 50px;\n  }\n  @media (${p => p.theme.device.desktop}) {\n    margin-right: 180px;\n    margin-top: 122px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.167;\n  text-align: start;\n\n  margin-bottom: 18px;\n  /* identical to box height, or 117% */\n\n  letter-spacing: -0.02em;\n  font-feature-settings: 'liga' off;\n\n  color: #fafafa;\n\n  @media (${p => p.theme.device.tablet}) {\n    font-size: 28px;\n    line-height: 30px;\n\n    margin-bottom: 32px;\n  }\n`;\n\nexport const LinkToSignin = styled(Link)`\n  position: absolute;\n  bottom: -50px;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 21px;\n  /* identical to box height */\n\n  text-decoration-line: underline;\n  color: #fafafa;\n\n  @media (${p => p.theme.device.tablet}) {\n    font-size: 16px;\n    line-height: 24px;\n  }\n`;\n","// import { Helmet } from 'react-helmet-async';\nimport { Container } from '@mui/material';\n\nimport { RegisterForm } from '../../components/RegisterForm/RegisterForm';\nimport { Box, Title, WrapperForm, LinkToSignin } from './RegisterPage.styled';\n\nconst RegisterPage = () => {\n  return (\n    <>\n      <Box>\n        <Container\n          fixed\n          maxWidth=\"desktop\"\n          style={{ background: '#FAFAFA', padding: 0 }}\n        >\n          <WrapperForm>\n            {/* <Helmet> */}\n            <Title>Registration</Title>\n            {/* </Helmet> */}\n            <RegisterForm />\n            <LinkToSignin to=\"/signin\">Sign In</LinkToSignin>\n          </WrapperForm>\n        </Container>\n      </Box>\n    </>\n  );\n};\nexport default RegisterPage;\n"],"names":["schema","object","shape","username","string","min","max","required","trim","email","password","matches","TextField","styled","MuiTextField","theme","errors","touched","values","fontFamily","fontSize","height","marginBottom","py","opacity","flex","order","color","flexGrow","borderRadius","border","initialValues","RegisterForm","dispatch","useDispatch","validationSchema","onSubmit","setSubmitting","register","submitForm","isSubmitting","autoComplete","component","fullWidth","name","type","placeholder","multiline","InputProps","sx","startAdornment","InputAdornment","position","PermIdentity","endAdornment","style","outline","CancelSharp","CheckCircleSharp","MailOutline","LockOpen","LinearProgress","Button","variant","width","mt","textTransform","backgroundColor","onClick","Box","imgPanaMobile","bgImgRectangleMobile","imgPanaMobile2x","bgImgRectangleMobile2x","p","device","tablet","imgPanaTablet","bgImgRectangleTablet","imgPanaTablet2x","bgImgRectangleTablet2x","desktop","imgPanaDesktop","bgImgRectangleDesktop","imgPanaDesktop2x","bgImgRectangleDesktop2x","WrapperForm","Title","LinkToSignin","Link","Container","fixed","maxWidth","background","padding","to"],"sourceRoot":""}