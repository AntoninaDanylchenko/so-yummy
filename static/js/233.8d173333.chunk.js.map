{"version":3,"file":"static/js/233.8d173333.chunk.js","mappings":"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","sources":["components/YupSchema/YupSchemaRegister.js","components/AuthForm/RegisterForm/RegisterForm.js","pages/RegisterPage/RegisterPage.styled.js","pages/RegisterPage/RegisterPage.js"],"sourcesContent":["import { object, string } from 'yup';\n\nexport const schema = object().shape({\n  username: string()\n    .min(1)\n    .max(16, 'Must be less than 16 characters')\n    .required('Please enter name')\n    .trim(),\n  email: string()\n    .email('Invalid email')\n    .lowercase()\n    .matches(/(?:.*(\\.com|\\.net))$/, 'Email must end with .com or .net')\n    .required('Email is required')\n    .trim(),\n  password: string()\n    .min(6, 'Password should be min 6 characters')\n    .max(16, 'Password should be max 16 characters')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/,\n      'Password must exist (A-a, 1-9)'\n    )\n    .required('Please enter password')\n    .trim(),\n});\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport { InputAdornment, Typography } from '@mui/material';\n\nimport { register } from 'redux/auth/operation';\nimport { selectIsLoading } from '../../../redux/auth/selector';\nimport { schema } from '../../YupSchema/YupSchemaRegister';\nimport { Loader } from 'components/Loader/Loader';\n\nimport {\n  PermIdentityIconS,\n  MailOutlineIconS,\n  LockOpenIconS,\n  CheckCircleSharpIconS,\n  CancelSharpIconS,\n  ErrorRoundedIconS,\n} from '../Icon.styled';\nimport { TextField, ButtonS } from '../AuthForm.styled';\n\nconst initialValues = {\n  username: '',\n  email: '',\n  password: '',\n};\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const handleOnSubmit = (values, { setSubmitting }) => {\n    setSubmitting(false);\n    dispatch(register(values));\n  };\n\n  const checkSecure = value => {\n    if (value.trim().length >= 6 && value.trim().length <= 10) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleOnSubmit}\n    >\n      {({ touched, errors, values, handleBlur }) => (\n        <Form autoComplete=\"off\">\n          <Field\n            component={TextField}\n            fullWidth\n            onBlur={handleBlur}\n            // id=\"outlined-controlled\"\n            name=\"username\"\n            type=\"text\"\n            placeholder=\"Name\"\n            autoComplete=\"off\"\n            InputProps={{\n              sx: {\n                border:\n                  errors.username && touched.username\n                    ? '1px solid #E74A3B'\n                    : touched?.username\n                    ? '1px solid #3CBC81'\n                    : '1px solid #FAFAFA',\n              },\n\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <PermIdentityIconS\n                    sx={{\n                      color:\n                        errors.username && touched.username\n                          ? '#E74A3B'\n                          : touched.username\n                          ? '#3CBC81'\n                          : '#fafafa',\n                    }}\n                  />\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <InputAdornment position=\"end\" style={{ outline: 'none' }}>\n                  {errors.username && touched.username && <CancelSharpIconS />}\n                  {!errors.username && touched.username && (\n                    <CheckCircleSharpIconS />\n                  )}\n                </InputAdornment>\n              ),\n            }}\n          />\n          <Field\n            component={TextField}\n            fullWidth\n            onBlur={handleBlur}\n            // id=\"outlined-controlled\"\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            variant=\"outlined\"\n            autoComplete=\"off\"\n            InputProps={{\n              sx: {\n                border:\n                  errors.email && touched.email\n                    ? '1px solid #E74A3B'\n                    : touched?.email\n                    ? '1px solid #3CBC81'\n                    : '1px solid #FAFAFA',\n              },\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <MailOutlineIconS\n                    sx={{\n                      color:\n                        errors.email && touched.email\n                          ? '#E74A3B'\n                          : touched.email\n                          ? '#3CBC81'\n                          : '#fafafa',\n                    }}\n                  />\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <InputAdornment position=\"end\" style={{ outline: 'none' }}>\n                  {errors.email && touched.email && <CancelSharpIconS />}\n                  {!errors.email && touched.email && <CheckCircleSharpIconS />}\n                </InputAdornment>\n              ),\n            }}\n          />\n\n          {!checkSecure(values.password) && !errors.password ? (\n            <Typography\n              variant=\"p\"\n              sx={{\n                display: 'flex',\n                fontSize: '12px',\n                marginLeft: '14px',\n                marginBottom: '3px',\n                marginTop: '6px',\n                color: '#F6C23E',\n              }}\n            >\n              Your password is little secure\n            </Typography>\n          ) : (\n            ' '\n          )}\n\n          <Field\n            component={TextField}\n            fullWidth\n            onBlur={handleBlur}\n            variant=\"outlined\"\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            autoComplete=\"off\"\n            InputProps={{\n              sx: {\n                border:\n                  errors.password && touched.password\n                    ? '1px solid #E74A3B'\n                    : touched?.password\n                    ? '1px solid #3CBC81'\n                    : '1px solid #FAFAFA',\n              },\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <LockOpenIconS\n                    sx={{\n                      color:\n                        errors.password && touched.password\n                          ? '#E74A3B'\n                          : touched.password\n                          ? '#3CBC81'\n                          : '#fafafa',\n                    }}\n                  />\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <InputAdornment position=\"end\" style={{ outline: 'none' }}>\n                  {errors.password && touched.password && <CancelSharpIconS />}\n                  {checkSecure(values.password) &&\n                    !errors.password &&\n                    touched.password && <CheckCircleSharpIconS />}\n                  {!checkSecure(values.password) && !errors.password && (\n                    <ErrorRoundedIconS />\n                  )}\n                </InputAdornment>\n              ),\n            }}\n          />\n\n          {isLoading && <Loader />}\n\n          <ButtonS\n            sx={{\n              [`&:hover`]: {\n                backgroundColor: '#8BAA36',\n                color: '#FAFAFA',\n              },\n              '@media (min-width: 768px)': {\n                width: '100%',\n                height: '59px',\n                borderRadius: '6px',\n                backgroundColor: ' #8BAA36;',\n                marginTop: '26px',\n              },\n            }}\n            variant=\"contained\"\n            fullWidth\n            type=\"submit\"\n            disabled={isLoading}\n          >\n            Sign up\n          </ButtonS>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nimport bgImgRectangleMobile from '../../images/form/rectangle_mobile.png';\nimport bgImgRectangleMobile2x from '../../images/form/rectangle_mobile@2x.png';\nimport bgImgRectangleTablet from '../../images/form/rectangle_tablet.png';\nimport bgImgRectangleTablet2x from '../../images/form/rectangle_tablet@2x.png';\nimport bgImgRectangleDesktop from '../../images/form/rectangle_desktop.png';\nimport bgImgRectangleDesktop2x from '../../images/form/rectangle_desktop@2x.png';\n\nimport imgPanaMobile from '../../images/form/food-pana_mobile.png';\nimport imgPanaMobile2x from '../../images/form/food-pana_mobile@2x.png';\nimport imgPanaTablet from '../../images/form/food-pana_tablet.png';\nimport imgPanaTablet2x from '../../images/form/food-pana_tablet@2x.png';\nimport imgPanaDesktop from '../../images/form/food-pana_desktop.png';\nimport imgPanaDesktop2x from '../../images/form/food-pana_desktop@2x.png';\n\nexport const Box = styled.section`\n  min-width: 100vw;\n  min-height: 100vh;\n\n  background-color: #fafafa;\n  background-image: url(${imgPanaMobile}), url(${bgImgRectangleMobile});\n  background-repeat: no-repeat;\n  background-size: 285px, cover;\n  /* background-size: calc(100vw - 180px), cover; */\n  background-position: center top 86px, center top 322px;\n\n  @media screen and (min-device-pixel-ratio: 2),\n    screen and (min-resolution: 192dpi),\n    screen and (min-resolution: 2dppx) {\n    background-image: url(${imgPanaMobile2x}), url(${bgImgRectangleMobile2x});\n  }\n\n  @media (${p => p.theme.device.tablet}) {\n    background-image: url(${imgPanaTablet}), url(${bgImgRectangleTablet});\n    background-size: 409px, cover;\n    background-position: center top 96px, center top 322px;\n\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${imgPanaTablet2x}), url(${bgImgRectangleTablet2x});\n    }\n  }\n\n  @media (${p => p.theme.device.desktop}) {\n    background-image: url(${imgPanaDesktop}), url(${bgImgRectangleDesktop});\n    background-size: 532px, cover;\n    background-position: left 113px top 115px, center top 364px;\n\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${imgPanaDesktop2x}),\n        url(${bgImgRectangleDesktop2x});\n    }\n  }\n`;\n\nexport const WrapperForm = styled.div`\n  position: absolute;\n  max-width: 335px;\n  margin-top: 305px;\n  margin-left: auto;\n  margin-right: auto;\n  left: 0;\n  right: 0;\n  text-align: center;\n\n  padding: 32px 28px 40px;\n\n  background: #2a2c36;\n  box-shadow: 0px 4px 48px rgba(0, 0, 0, 0.1);\n  border-radius: 30px;\n\n  @media (${p => p.theme.device.tablet}) {\n    max-width: 500px;\n    margin-top: 444px;\n    padding: 44px 50px;\n  }\n  @media (${p => p.theme.device.desktop}) {\n    margin-right: 180px;\n    margin-top: 122px;\n  }\n`;\n\nexport const Title = styled.h2`\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.167;\n  text-align: start;\n\n  margin-bottom: 18px;\n\n  letter-spacing: -0.02em;\n  font-feature-settings: 'liga' off;\n\n  color: #fafafa;\n\n  @media (${p => p.theme.device.tablet}) {\n    font-size: 28px;\n    line-height: 30px;\n\n    margin-bottom: 32px;\n  }\n`;\n\nexport const LinkToSignin = styled(Link)`\n  position: absolute;\n  bottom: -50px;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 21px;\n  text-decoration-line: underline;\n  color: #fafafa;\n\n  @media (${p => p.theme.device.tablet}) {\n    font-size: 16px;\n    line-height: 24px;\n  }\n`;\n","// import { Helmet } from 'react-helmet-async';\nimport { Container } from '@mui/material';\n\nimport { RegisterForm } from '../../components/AuthForm/RegisterForm/RegisterForm';\nimport { Box, Title, WrapperForm, LinkToSignin } from './RegisterPage.styled';\n\nconst RegisterPage = () => {\n  return (\n    <>\n      <Box>\n        <Container\n          fixed\n          maxWidth=\"desktop\"\n          style={{ background: '#FAFAFA', padding: 0 }}\n        >\n          <WrapperForm>\n            {/* <Helmet> */}\n            <Title>Registration</Title>\n            {/* </Helmet> */}\n            <RegisterForm />\n            <LinkToSignin to=\"/signin\">Sign In</LinkToSignin>\n          </WrapperForm>\n        </Container>\n      </Box>\n    </>\n  );\n};\nexport default RegisterPage;\n"],"names":["schema","object","shape","username","string","min","max","required","trim","email","lowercase","matches","password","initialValues","RegisterForm","dispatch","useDispatch","isLoading","useSelector","selectIsLoading","checkSecure","value","length","validationSchema","onSubmit","values","setSubmitting","register","touched","errors","handleBlur","autoComplete","component","TextField","fullWidth","onBlur","name","type","placeholder","InputProps","sx","border","startAdornment","InputAdornment","position","color","endAdornment","style","outline","variant","Typography","display","fontSize","marginLeft","marginBottom","marginTop","Loader","backgroundColor","width","height","borderRadius","disabled","Box","styled","imgPanaMobile","bgImgRectangleMobile","imgPanaMobile2x","bgImgRectangleMobile2x","p","theme","device","tablet","imgPanaTablet","bgImgRectangleTablet","imgPanaTablet2x","bgImgRectangleTablet2x","desktop","imgPanaDesktop","bgImgRectangleDesktop","imgPanaDesktop2x","bgImgRectangleDesktop2x","WrapperForm","Title","LinkToSignin","Link","Container","fixed","maxWidth","background","padding","to"],"sourceRoot":""}